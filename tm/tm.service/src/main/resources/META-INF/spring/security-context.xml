<?xml version="1.0" encoding="UTF-8"?>
<!--

        This file is part of the Squashtest platform.
        Copyright (C) 2010 - 2012 Henix, henix.fr

        See the NOTICE file distributed with this work for additional
        information regarding copyright ownership.

        This is free software: you can redistribute it and/or modify
        it under the terms of the GNU Lesser General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.

        this software is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU Lesser General Public License for more details.

        You should have received a copy of the GNU Lesser General Public License
        along with this software.  If not, see <http://www.gnu.org/licenses/>.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<security:global-method-security
		secured-annotations="enabled" pre-post-annotations="enabled"
		access-decision-manager-ref="squashtest.core.security.AclDecisionManager"
		order="2">
		<security:expression-handler ref="expressionHandler" />
	</security:global-method-security>

	<bean class="org.springframework.security.access.vote.AffirmativeBased"
		id="squashtest.core.security.AclDecisionManager">
		<property name="decisionVoters">
			<list>
				<ref bean="preInvocationAuthorizationAdviceVoter" />
			</list>
		</property>
		<property name="allowIfAllAbstainDecisions" value="true" />
	</bean>

	<bean
		class="org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter"
		id="preInvocationAuthorizationAdviceVoter">
		<constructor-arg>
			<ref bean="preInvocationAdvice" />
		</constructor-arg>
	</bean>


	<bean
		class="org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice"
		id="preInvocationAdvice">
		<property name="expressionHandler" ref="expressionHandler" />
	</bean>

	<bean id="expressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<property name="permissionEvaluator" ref="squashtest.core.security.PermissionEvaluator" />
		<property name="parameterNameDiscoverer">
			<!-- We use 2 param name discovery strategies : the standard one and a "arg0, arg1" fallback -->
			<bean
				class="org.squashtest.tm.service.internal.spring.CompositeDelegatingParameterNameDiscoverer">
				<constructor-arg>
					<list>
						<bean
							class="org.springframework.core.LocalVariableTableParameterNameDiscoverer" />
						<bean
							class="org.squashtest.tm.service.internal.spring.ArgumentPositionParameterNameDiscoverer" />
					</list>
				</constructor-arg>
			</bean>
		</property>
	</bean>

</beans>
