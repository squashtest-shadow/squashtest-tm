<?xml version="1.0" encoding="UTF-8"?>
<!--

        This file is part of the Squashtest platform.
        Copyright (C) 2010 - 2012 Henix, henix.fr

        See the NOTICE file distributed with this work for additional
        information regarding copyright ownership.

        This is free software: you can redistribute it and/or modify
        it under the terms of the GNU Lesser General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.

        this software is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU Lesser General Public License for more details.

        You should have received a copy of the GNU Lesser General Public License
        along with this software.  If not, see <http://www.gnu.org/licenses/>.

-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
  	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

  <context:component-scan base-package="*" />

  <bean id="requirementCreationEventPublisherAspect" class="org.squashtest.csp.tm.domain.event.RequirementCreationEventPublisherAspect"
    factory-method="aspectOf" />
  <bean id="requirementModificationEventPublisherAspect" class="org.squashtest.csp.tm.domain.event.RequirementModificationEventPublisherAspect"
    factory-method="aspectOf" />

  <!-- ====== BEAN VALIDATION ====== -->
  <bean id="validatorFactory" class="org.squashtest.csp.core.validation.ValidatorFactoryBean" factory-method="getInstance" />


  <!-- ====== SERVICES NOT CONFIGURABLE THROUGH ANNOTATIONS ====== -->
  <bean id="squashtest.tm.service.TestCasesWorkspaceService" class="org.squashtest.csp.tm.internal.service.GenericWorkspaceService">
    <property name="libraryDao" ref="hibernateTestCaseLibraryDao" />
    <property name="libraryStrategy" ref="squashtest.tm.service.TestCaseLibrarySelectionStrategy" />
  </bean>
  <bean id="squashtest.tm.service.RequirementsWorkspaceService" class="org.squashtest.csp.tm.internal.service.GenericWorkspaceService">
    <property name="libraryDao" ref="hibernateRequirementLibraryDao" />
    <property name="libraryStrategy" ref="squashtest.tm.service.RequirementLibrarySelectionStrategy" />
  </bean>
  <bean id="squashtest.tm.service.CampaignsWorkspaceService" class="org.squashtest.csp.tm.internal.service.GenericWorkspaceService">
    <property name="libraryDao" ref="hibernateCampaignLibraryDao" />
    <property name="libraryStrategy" ref="squashtest.tm.service.CampaignLibrarySelectionStrategy" />
  </bean>

  <bean id="squashtest.tm.service.TestCaseFolderModificationService" class="org.squashtest.csp.tm.internal.service.GenericFolderModificationService">
    <property name="folderDao" ref="hibernateTestCaseFolderDao" />
    <property name="libraryDao" ref="hibernateTestCaseLibraryDao" />
  </bean>

  <bean id="squashtest.tm.service.RequirementFolderModificationService" class="org.squashtest.csp.tm.internal.service.GenericFolderModificationService">
    <property name="folderDao" ref="hibernateRequirementFolderDao" />
    <property name="libraryDao" ref="hibernateRequirementLibraryDao" />
  </bean>
  <bean id="squashtest.tm.service.CampaignFolderModificationService" class="org.squashtest.csp.tm.internal.service.GenericFolderModificationService">
    <property name="folderDao" ref="hibernateCampaignFolderDao" />
    <property name="libraryDao" ref="hibernateCampaignLibraryDao" />
  </bean>

  <bean id="squashtest.tm.service.internal.TestCaseManagementService" class="org.squashtest.csp.tm.internal.service.GenericNodeManagementService">
    <property name="nodeDao" ref="hibernateTestCaseDao" />
    <property name="folderDao" ref="hibernateTestCaseFolderDao" />
    <property name="libraryDao" ref="hibernateTestCaseLibraryDao" />
  </bean>
  
	<!--   Paste Strategies-->
	<bean id="squashtest.tm.service.internal.PasteToTestCaseFolderStrategy" class="org.squashtest.csp.tm.internal.service.PasteStrategy">	
	    <property name="genericDao" ref="hibernateObjectDao"/>
	    <property name="containerDao" ref="hibernateTestCaseFolderDao" />
	    <property name="copiedDao" ref="squashtest.tm.repository.TestCaseLibraryNodeDao" />
  	</bean>
  	
  	<bean id="squashtest.tm.service.internal.PasteToTestCaseLibraryStrategy" class="org.squashtest.csp.tm.internal.service.PasteStrategy">  
	    <property name="genericDao" ref="hibernateObjectDao"/>
	    <property name="containerDao" ref="hibernateTestCaseLibraryDao" />
	    <property name="copiedDao" ref="squashtest.tm.repository.TestCaseLibraryNodeDao" />
  	</bean>
  	
  	<bean id="squashtest.tm.service.internal.PasteToRequirementFolderStrategy" class="org.squashtest.csp.tm.internal.service.PasteStrategy">  	
	   <property name="genericDao" ref="hibernateObjectDao"/>
	    <property name="containerDao" ref="hibernateRequirementFolderDao" />
	    <property name="copiedDao" ref="squashtest.tm.repository.RequirementLibraryNodeDao" />
  	</bean>
  
  	<bean id="squashtest.tm.service.internal.PasteToRequirementLibraryStrategy" class="org.squashtest.csp.tm.internal.service.PasteStrategy">
  		<property name="genericDao" ref="hibernateObjectDao"/>
  		<property name="containerDao" ref="hibernateRequirementLibraryDao" />
	    <property name="copiedDao" ref="squashtest.tm.repository.RequirementLibraryNodeDao" />
  	</bean>
  	
  	<bean id="squashtest.tm.service.internal.PasteToCampaignFolderStrategy" class="org.squashtest.csp.tm.internal.service.PasteStrategy">
  		 <property name="genericDao" ref="hibernateObjectDao"/>
  		 <property name="containerDao" ref="hibernateCampaignFolderDao" />
	    <property name="copiedDao" ref="squashtest.tm.repository.CampaignLibraryNodeDao" />
  	</bean>
  	
  	<bean id="squashtest.tm.service.internal.PasteToCampaignLibraryStrategy" class="org.squashtest.csp.tm.internal.service.PasteStrategy">
  		<property name="genericDao" ref="hibernateObjectDao"/>
  		<property name="containerDao" ref="hibernateCampaignLibraryDao" />
	    <property name="copiedDao" ref="squashtest.tm.repository.CampaignLibraryNodeDao" />
  	</bean>
  	
  	<bean id="squashtest.tm.service.internal.PasteToCampaignStrategy" class="org.squashtest.csp.tm.internal.service.PasteStrategy">
  		<property name="genericDao" ref="hibernateObjectDao"/>
  		<property name="containerDao" ref="hibernateCampaignDao" />
	    <property name="copiedDao" ref="hibernateIterationDao" />
  	</bean>
  	
  	<bean id="squashtest.tm.service.internal.PasteToIterationStrategy" class="org.squashtest.csp.tm.internal.service.PasteStrategy">
  		<property name="genericDao" ref="hibernateObjectDao"/>
  		<property name="containerDao" ref="hibernateIterationDao" />
	    <property name="copiedDao" ref="CustomTestSuiteDao" />
  	</bean>
  	
  	
  <!-- Dynamic managers -->

  <bean id="squashtest.tm.service.TestCaseModificationService" class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean">
    <property name="componentType" value="org.squashtest.csp.tm.service.TestCaseModificationService" />
    <property name="entityType" value="org.squashtest.csp.tm.domain.testcase.TestCase" />
  </bean>
  
  <bean id="squashtest.tm.service.TestStepFinder" class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean">
    <property name="componentType" value="org.squashtest.csp.tm.service.testcase.TestStepFinder" />
    <property name="entityType" value="org.squashtest.csp.tm.domain.testcase.TestStep" />
  </bean>
  
  <bean id="squashtest.tm.service.ProjectManagerService" class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean">
    <property name="componentType" value="org.squashtest.csp.tm.service.project.ProjectManagerService" />
    <property name="entityType" value="org.squashtest.csp.tm.domain.project.Project" />
  </bean>
  
  <bean id="squashtest.tm.service.ProjectTemplateManagerService" class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean">
    <property name="componentType" value="org.squashtest.csp.tm.service.project.ProjectTemplateManagerService" />
    <property name="entityType" value="org.squashtest.csp.tm.domain.project.ProjectTemplate" />
  </bean>
  
  <bean id="squashtest.tm.service.GenericProjectManagerService" class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean">
    <property name="componentType" value="org.squashtest.csp.tm.service.project.GenericProjectManagerService" />
    <property name="entityType" value="org.squashtest.csp.tm.domain.project.GenericProject" />
  </bean>

  <bean id="squashtest.tm.service.BugTrackerModificationService" class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean">
    <property name="componentType" value="org.squashtest.csp.tm.service.BugTrackerModificationService" />
    <property name="entityType" value="org.squashtest.csp.core.bugtracker.domain.BugTracker" />
  </bean>
  <bean id="squashtest.tm.service.internal.RequirementManagementService" class="org.squashtest.csp.tm.internal.service.GenericNodeManagementService">
    <property name="nodeDao" ref="hibernateRequirementDao" />
    <property name="folderDao" ref="hibernateRequirementFolderDao" />
    <property name="libraryDao" ref="hibernateRequirementLibraryDao" />
  </bean>

  <bean id="squashtest.tm.service.RequirementModificationService" class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean">
    <property name="componentType" value="org.squashtest.csp.tm.service.RequirementModificationService" />
    <property name="entityType" value="org.squashtest.csp.tm.domain.requirement.Requirement" />
  </bean>

  <bean id="squashtest.tm.service.internal.CampaignManagementService" class="org.squashtest.csp.tm.internal.service.GenericNodeManagementService">
    <property name="nodeDao" ref="hibernateCampaignDao" />
    <property name="folderDao" ref="hibernateCampaignFolderDao" />
    <property name="libraryDao" ref="hibernateCampaignLibraryDao" />
  </bean>

  <bean id="squashtest.tm.service.CampaignModificationService" class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean">
    <property name="componentType" value="org.squashtest.csp.tm.service.CampaignModificationService" />
    <property name="entityType" value="org.squashtest.csp.tm.domain.campaign.Campaign" />
  </bean>

  <bean id="squashtest.tm.service.IterationModificationService" class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean">
    <property name="componentType" value="org.squashtest.csp.tm.service.IterationModificationService" />
    <property name="entityType" value="org.squashtest.csp.tm.domain.campaign.Iteration" />
  </bean>

  <bean id="squashtest.tm.service.RequirementVersionManagerService" class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean">
    <property name="componentType" value="org.squashtest.csp.tm.service.RequirementVersionManagerService" />
    <property name="entityType" value="org.squashtest.csp.tm.domain.requirement.RequirementVersion" />
  </bean>

  <bean id="squashtest.tm.service.TestSuiteModificationService" class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean">
    <property name="componentType" value="org.squashtest.csp.tm.service.TestSuiteModificationService" />
    <property name="entityType" value="org.squashtest.csp.tm.domain.campaign.TestSuite" />
  </bean>

  <bean id="squashtest.tm.service.CustomFieldManagerService" class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean">
    <property name="componentType" value="org.squashtest.csp.tm.service.customfield.CustomFieldManagerService" />
    <property name="entityType" value="org.squashtest.csp.tm.domain.customfield.CustomField" />
  </bean>
  
   
</beans>

