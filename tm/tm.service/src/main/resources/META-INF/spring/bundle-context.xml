<?xml version="1.0" encoding="UTF-8"?>
<!--

        This file is part of the Squashtest platform.
        Copyright (C) 2010 - 2012 Henix, henix.fr

        See the NOTICE file distributed with this work for additional
        information regarding copyright ownership.

        This is free software: you can redistribute it and/or modify
        it under the terms of the GNU Lesser General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.

        this software is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU Lesser General Public License for more details.

        You should have received a copy of the GNU Lesser General Public License
        along with this software.  If not, see <http://www.gnu.org/licenses/>.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
  	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<context:annotation-config />

	<context:component-scan base-package="*" />

	<bean id="requirementCreationEventPublisherAspect"
		class="org.squashtest.tm.domain.event.RequirementCreationEventPublisherAspect"
		factory-method="aspectOf">
		<property name="auditor" ref="statusBasedRequirementAuditor" />
	</bean>
	<bean id="requirementModificationEventPublisherAspect"
		class="org.squashtest.tm.domain.event.RequirementModificationEventPublisherAspect"
		factory-method="aspectOf">
		<property name="auditor" ref="statusBasedRequirementAuditor" />
	</bean>

	<!-- ====== BEAN VALIDATION ====== -->
	<bean id="javax.validation.ValidatorFactory"
		class="org.squashtest.tm.service.validation.ValidatorFactoryBean"
		factory-method="getInstance" />

	<!-- ====== SHARED THREAD POOL TASK EXECUTOR ====== -->

	<bean id="squashtest.tm.service.ThreadPoolTaskScheduler"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
		<property name="poolSize" value="10" />
	</bean>



	<!-- the following bean, exposed through OSGI, will be in charge of modifications 
		of the user auth. note that the password encoder should be consistent with 
		the one used in the authentication. Needs the userDetailsManager as a service 
		reference. -->
	<bean id="squashtest.core.security.AdministratorAuthenticationService"
		class="org.squashtest.tm.service.internal.security.AdministratorAuthenticationServiceImpl">
		<property name="passwordEncoder">
			<bean
				class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />
		</property>
		<property name="userDetailsManager"
			ref="squashtest.core.security.JdbcUserDetailsManager" />
	</bean>

	<!-- ====== SERVICES NOT CONFIGURABLE THROUGH ANNOTATIONS ====== -->

	<bean id="parent.GenericWorkspaceService" abstract="true">
		<property name="projectFilterModificationService"
			ref="squashtest.tm.service.ProjectFilterModificationService" />
	</bean>

	<bean id="squashtest.tm.service.TestCasesWorkspaceService"
		class="org.squashtest.tm.service.internal.library.GenericWorkspaceService"
		parent="parent.GenericWorkspaceService">
		<property name="libraryDao" ref="hibernateTestCaseLibraryDao" />
		<property name="libraryStrategy"
			ref="squashtest.tm.service.TestCaseLibrarySelectionStrategy" />
	</bean>
	<bean id="squashtest.tm.service.RequirementsWorkspaceService"
		class="org.squashtest.tm.service.internal.library.GenericWorkspaceService"
		parent="parent.GenericWorkspaceService">
		<property name="libraryDao" ref="hibernateRequirementLibraryDao" />
		<property name="libraryStrategy"
			ref="squashtest.tm.service.RequirementLibrarySelectionStrategy" />
	</bean>
	<bean id="squashtest.tm.service.CampaignsWorkspaceService"
		class="org.squashtest.tm.service.internal.library.GenericWorkspaceService"
		parent="parent.GenericWorkspaceService">
		<property name="libraryDao" ref="hibernateCampaignLibraryDao" />
		<property name="libraryStrategy"
			ref="squashtest.tm.service.CampaignLibrarySelectionStrategy" />
	</bean>

	<bean id="parent.GenericFolderModificationService" abstract="true">
		<property name="permissionService"
			ref="squashtest.core.security.PermissionEvaluationService" />
	</bean>

	<bean id="squashtest.tm.service.TestCaseFolderModificationService"
		class="org.squashtest.tm.service.internal.library.GenericFolderModificationService"
		parent="parent.GenericFolderModificationService">
		<property name="folderDao" ref="hibernateTestCaseFolderDao" />
		<property name="libraryDao" ref="hibernateTestCaseLibraryDao" />
	</bean>

	<bean id="squashtest.tm.service.RequirementFolderModificationService"
		class="org.squashtest.tm.service.internal.library.GenericFolderModificationService"
		parent="parent.GenericFolderModificationService">
		<property name="folderDao" ref="hibernateRequirementFolderDao" />
		<property name="libraryDao" ref="hibernateRequirementLibraryDao" />
	</bean>
	<bean id="squashtest.tm.service.CampaignFolderModificationService"
		class="org.squashtest.tm.service.internal.library.GenericFolderModificationService"
		parent="parent.GenericFolderModificationService">
		<property name="folderDao" ref="hibernateCampaignFolderDao" />
		<property name="libraryDao" ref="hibernateCampaignLibraryDao" />
	</bean>

	<bean id="parent.GenericNodeManagementService" abstract="true">
		<property name="permissionService"
			ref="squashtest.core.security.PermissionEvaluationService" />
	</bean>

	<bean id="squashtest.tm.service.internal.TestCaseManagementService"
		class="org.squashtest.tm.service.internal.library.GenericNodeManagementService"
		parent="parent.GenericNodeManagementService">
		<property name="nodeDao" ref="hibernateTestCaseDao" />
		<property name="folderDao" ref="hibernateTestCaseFolderDao" />
		<property name="libraryDao" ref="hibernateTestCaseLibraryDao" />
	</bean>

	<bean id="squashtest.tm.service.internal.RequirementManagementService"
		class="org.squashtest.tm.service.internal.library.GenericNodeManagementService"
		parent="parent.GenericNodeManagementService">
		<property name="nodeDao" ref="hibernateRequirementDao" />
		<property name="folderDao" ref="hibernateRequirementFolderDao" />
		<property name="libraryDao" ref="hibernateRequirementLibraryDao" />
	</bean>

	<bean id="squashtest.tm.service.internal.CampaignManagementService"
		class="org.squashtest.tm.service.internal.library.GenericNodeManagementService"
		parent="parent.GenericNodeManagementService">
		<property name="nodeDao" ref="hibernateCampaignDao" />
		<property name="folderDao" ref="hibernateCampaignFolderDao" />
		<property name="libraryDao" ref="hibernateCampaignLibraryDao" />
	</bean>

	<!-- Paste Strategies -->
	<bean id="treeNodeCopierProvider"
		class="org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean">
		<property name="targetBeanName" value="treeNodeCopier" />
	</bean>

	<bean id="parent.PasteStrategy" abstract="true">
		<property name="permissionService"
			ref="squashtest.core.security.PermissionEvaluationService" />
		<property name="copier" ref="treeNodeCopierProvider" />
		<property name="genericDao" ref="hibernateObjectDao" />
	</bean>

	<bean id="squashtest.tm.service.internal.PasteToTestCaseFolderStrategy"
		class="org.squashtest.tm.service.internal.library.PasteStrategy"
		parent="parent.PasteStrategy">
		<property name="containerDao" ref="hibernateTestCaseFolderDao" />
		<property name="copiedDao"
			ref="squashtest.tm.repository.TestCaseLibraryNodeDao" />
	</bean>

	<bean id="squashtest.tm.service.internal.PasteToTestCaseLibraryStrategy"
		class="org.squashtest.tm.service.internal.library.PasteStrategy"
		parent="parent.PasteStrategy">
		<property name="containerDao" ref="hibernateTestCaseLibraryDao" />
		<property name="copiedDao"
			ref="squashtest.tm.repository.TestCaseLibraryNodeDao" />
	</bean>

	<bean id="squashtest.tm.service.internal.PasteToRequirementFolderStrategy"
		class="org.squashtest.tm.service.internal.library.PasteStrategy"
		parent="parent.PasteStrategy">
		<property name="containerDao" ref="hibernateRequirementFolderDao" />
		<property name="copiedDao"
			ref="squashtest.tm.repository.RequirementLibraryNodeDao" />
	</bean>

	<bean
		id="squashtest.tm.service.internal.PasteToRequirementLibraryStrategy"
		class="org.squashtest.tm.service.internal.library.PasteStrategy"
		parent="parent.PasteStrategy">
		<property name="containerDao" ref="hibernateRequirementLibraryDao" />
		<property name="copiedDao"
			ref="squashtest.tm.repository.RequirementLibraryNodeDao" />
	</bean>

	<bean id="squashtest.tm.service.internal.PasteToCampaignFolderStrategy"
		class="org.squashtest.tm.service.internal.library.PasteStrategy"
		parent="parent.PasteStrategy">
		<property name="containerDao" ref="hibernateCampaignFolderDao" />
		<property name="copiedDao"
			ref="squashtest.tm.repository.CampaignLibraryNodeDao" />
	</bean>

	<bean id="squashtest.tm.service.internal.PasteToCampaignLibraryStrategy"
		class="org.squashtest.tm.service.internal.library.PasteStrategy"
		parent="parent.PasteStrategy">
		<property name="containerDao" ref="hibernateCampaignLibraryDao" />
		<property name="copiedDao"
			ref="squashtest.tm.repository.CampaignLibraryNodeDao" />
	</bean>

	<bean id="squashtest.tm.service.internal.PasteToCampaignStrategy"
		class="org.squashtest.tm.service.internal.library.PasteStrategy"
		parent="parent.PasteStrategy">
		<property name="containerDao" ref="hibernateCampaignDao" />
		<property name="copiedDao" ref="hibernateIterationDao" />
	</bean>

	<bean id="squashtest.tm.service.internal.PasteToIterationStrategy"
		class="org.squashtest.tm.service.internal.library.PasteStrategy"
		parent="parent.PasteStrategy">
		<property name="containerDao" ref="hibernateIterationDao" />
		<property name="copiedDao" ref="testSuiteDao" />
	</bean>


	<!-- Dynamic managers -->
	<bean id="parent.DynamicManagerFactoryBean" abstract="true">
		<property name="sessionFactory"
			ref="squashtest.tm.persistence.hibernate.SessionFactory" />
	</bean>

	<bean id="squashtest.tm.service.TestCaseModificationService"
		class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean"
		parent="parent.DynamicManagerFactoryBean">
		<property name="componentType"
			value="org.squashtest.tm.service.testcase.TestCaseModificationService" />
		<property name="entityType" value="org.squashtest.tm.domain.testcase.TestCase" />
		<!-- <property name="customComponent" ref="CustomTestCaseModificationService" 
			/> -->
	</bean>

	<bean id="squashtest.tm.service.TestStepModificationService"
		class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean"
		parent="parent.DynamicManagerFactoryBean">
		<property name="componentType"
			value="org.squashtest.tm.service.testcase.TestStepModificationService" />
		<property name="entityType" value="org.squashtest.tm.domain.testcase.TestStep" />
		<!-- <property name="customComponent" ref="CustomTestStepModificationService" 
			/> -->
	</bean>

	<bean id="squashtest.tm.service.TeamModificationService"
		class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean"
		parent="parent.DynamicManagerFactoryBean">
		<property name="componentType"
			value="org.squashtest.tm.service.user.TeamModificationService" />
		<property name="entityType" value="org.squashtest.tm.domain.users.Team" />
	</bean>

	<bean id="squashtest.tm.service.ProjectManagerService"
		class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean"
		parent="parent.DynamicManagerFactoryBean">
		<property name="componentType"
			value="org.squashtest.tm.service.project.ProjectManagerService" />
		<property name="entityType" value="org.squashtest.tm.domain.project.Project" />
	</bean>

	<bean id="squashtest.tm.service.ProjectTemplateManagerService"
		class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean"
		parent="parent.DynamicManagerFactoryBean">
		<property name="componentType"
			value="org.squashtest.tm.service.project.ProjectTemplateManagerService" />
		<property name="entityType"
			value="org.squashtest.tm.domain.project.ProjectTemplate" />
		<!-- <property name="customComponent" ref="CustomProjectTemplateManagerService" 
			/> -->
	</bean>

	<bean id="squashtest.tm.service.GenericProjectManagerService"
		class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean"
		parent="parent.DynamicManagerFactoryBean">
		<property name="componentType"
			value="org.squashtest.tm.service.project.GenericProjectManagerService" />
		<property name="entityType"
			value="org.squashtest.tm.domain.project.GenericProject" />
		<!-- <property name="customComponent" ref="CustomGenericProjectManager" 
			/> -->
	</bean>

	<bean id="squashtest.tm.service.BugTrackerModificationService"
		class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean"
		parent="parent.DynamicManagerFactoryBean">
		<property name="componentType"
			value="org.squashtest.tm.service.bugtracker.BugTrackerModificationService" />
		<property name="entityType"
			value="org.squashtest.csp.core.bugtracker.domain.BugTracker" />
		<!-- <property name="customComponent" ref="CustomBugTrackerModificationService" 
			/> -->
	</bean>

	<bean id="squashtest.tm.service.RequirementModificationService"
		class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean"
		parent="parent.DynamicManagerFactoryBean">
		<property name="componentType"
			value="org.squashtest.tm.service.requirement.RequirementModificationService" />
		<property name="entityType"
			value="org.squashtest.tm.domain.requirement.Requirement" />
		<!-- <property name="customComponent" ref="CustomRequirementModificationService" 
			/> -->
	</bean>

	<bean id="squashtest.tm.service.CampaignModificationService"
		class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean"
		parent="parent.DynamicManagerFactoryBean">
		<property name="componentType"
			value="org.squashtest.tm.service.campaign.CampaignModificationService" />
		<property name="entityType" value="org.squashtest.tm.domain.campaign.Campaign" />
		<!-- <property name="customComponent" ref="CustomCampaignModificationService" 
			/> -->
	</bean>

	<bean id="squashtest.tm.service.IterationModificationService"
		class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean"
		parent="parent.DynamicManagerFactoryBean">
		<property name="componentType"
			value="org.squashtest.tm.service.campaign.IterationModificationService" />
		<property name="entityType" value="org.squashtest.tm.domain.campaign.Iteration" />
		<!-- <property name="customComponent" ref="CustomIterationModificationService" 
			/> -->
	</bean>

	<bean id="squashtest.tm.service.RequirementVersionManagerService"
		class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean"
		parent="parent.DynamicManagerFactoryBean">
		<property name="componentType"
			value="org.squashtest.tm.service.requirement.RequirementVersionManagerService" />
		<property name="entityType"
			value="org.squashtest.tm.domain.requirement.RequirementVersion" />
		<!-- <property name="customComponent" ref="CustomRequirementVersionManagerService" 
			/> -->
	</bean>

	<bean id="squashtest.tm.service.TestSuiteModificationService"
		class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean"
		parent="parent.DynamicManagerFactoryBean">
		<property name="componentType"
			value="org.squashtest.tm.service.campaign.TestSuiteModificationService" />
		<property name="entityType" value="org.squashtest.tm.domain.campaign.TestSuite" />
		<!-- <property name="customComponent" ref="CustomTestSuiteModificationService" 
			/> -->
	</bean>

	<bean id="squashtest.tm.service.CustomFieldManagerService"
		class="org.squashtest.tm.core.dynamicmanager.factory.DynamicManagerFactoryBean"
		parent="parent.DynamicManagerFactoryBean">
		<property name="componentType"
			value="org.squashtest.tm.service.customfield.CustomFieldManagerService" />
		<property name="entityType"
			value="org.squashtest.tm.domain.customfield.CustomField" />
		<!-- <property name="customComponent" ref="CustomCustomFieldManagerService" 
			/> -->
	</bean>

	<!-- SPRING SEC -->

	<!-- =============== BUG TRACKER RELATED BEANS ============================ -->
	<bean id="squashtest.core.bugtracker.BugTrackerContextHolder"
		class="org.squashtest.csp.core.bugtracker.service.ThreadLocalBugTrackerContextHolder" />

	<bean id="squashtest.core.bugtracker.BugTrackerConnectorFactory"
		class="org.squashtest.csp.core.bugtracker.core.BugTrackerConnectorFactory" />

	<bean id="bugTrackersService"
		class="org.squashtest.csp.core.bugtracker.service.BugTrackersServiceImpl">
		<property name="bugTrackerConnectorFactory"
			ref="squashtest.core.bugtracker.BugTrackerConnectorFactory" />
		<property name="contextHolder"
			ref="squashtest.core.bugtracker.BugTrackerContextHolder" />
	</bean>
	<!-- =============== /BUG TRACKER RELATED BEANS ============================ -->


</beans>

