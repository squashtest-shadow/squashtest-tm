<?xml version="1.0" encoding="UTF-8"?>
<!--

        This file is part of the Squashtest platform.
        Copyright (C) 2010 - 2012 Henix, henix.fr

        See the NOTICE file distributed with this work for additional
        information regarding copyright ownership.

        This is free software: you can redistribute it and/or modify
        it under the terms of the GNU Lesser General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.

        this software is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU Lesser General Public License for more details.

        You should have received a copy of the GNU Lesser General Public License
        along with this software.  If not, see <http://www.gnu.org/licenses/>.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:osgix="http://www.springframework.org/schema/osgi-compendium"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi-2.0-m1.xsd
		http://www.springframework.org/schema/osgi-compendium http://www.springframework.org/schema/osgi-compendium/spring-osgi-compendium-2.0-m1.xsd">

	<!-- Definitions using elements of the osgi namespace can be included in 
		this file. There is no requirement to keep these definitions in a separate 
		file if you do not want to. The rationale for keeping these definitions separate 
		is to facilitate integration testing of the bundle outside of an OSGi container -->

	<!-- Security services -->
	<osgi:reference id="squashtest.core.security.ObjectIdentityRetrievalStrategy"
		bean-name="squashtest.core.security.ObjectIdentityRetrievalStrategy"
		interface="org.springframework.security.acls.model.ObjectIdentityRetrievalStrategy" availability="mandatory" />
		
	<osgi:reference id="squashtest.core.security.AclService"
		bean-name="squashtest.core.security.AclService"
		interface="org.springframework.security.acls.model.AclService" availability="mandatory" />
	
	<osgi:reference id="squashtest.core.configuration.ConfigurationService"
		bean-name="squashtest.core.configuration.ConfigurationService"
		interface="org.squashtest.tm.service.configuration.ConfigurationService" availability="mandatory" />

	<!-- Validation services -->
	<osgi:reference id="javax.validation.ValidatorFactory"
		bean-name="javax.validation.ValidatorFactory" interface="javax.validation.ValidatorFactory"
		availability="mandatory" />

	<!-- Persistence services -->
	<osgi:reference id="squashtest.tm.hibernate.TransactionManager"
		bean-name="squashtest.tm.hibernate.TransactionManager" interface="org.springframework.transaction.PlatformTransactionManager"
		availability="mandatory" />

	<osgi:reference id="squashtest.tm.persistence.hibernate.SessionFactory"
		bean-name="squashtest.tm.persistence.hibernate.SessionFactory"
		interface="org.hibernate.SessionFactory" availability="mandatory" />

	<osgi:reference id="squashtest.core.persistence.jdbc.DataSource"
		bean-name="squashtest.core.persistence.jdbc.DataSource" interface="javax.sql.DataSource"
		availability="mandatory" />

	<!-- Bug tracker services -->
	<osgi:reference id="squashtest.core.bugtracker.BugTrackerContextHolder"
		bean-name="squashtest.core.bugtracker.BugTrackerContextHolder"
		interface="org.squashtest.csp.core.bugtracker.service.BugTrackerContextHolder"
		availability="mandatory" />
	
	<osgix:cm-properties id="squashtest.core.auth.config"
		persistent-id="org.squashtest.csp.core.auth.config" />	
		
		
	<!-- the following is an heresy imposed by multi security contexts across OSGI bundles.-->
	<osgi:service ref="squashtest.core.security.JdbcUserDetailsManager" 
		interface="org.springframework.security.provisioning.UserDetailsManager" />
		
	<!--  hooks for event on authentication success -->
	<osgi:list id="core.web.registry.authSuccessCallback" interface="org.squashtest.tm.web.security.authentication.AuthenticationSuccessCallback"/>
	
</beans>
