#
#     This file is part of the Squashtest platform.
#     Copyright (C) 2010 - 2012 Henix, henix.fr
#
#     See the NOTICE file distributed with this work for additional
#     information regarding copyright ownership.
#
#     This is free software: you can redistribute it and/or modify
#     it under the terms of the GNU Lesser General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     this software is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU Lesser General Public License for more details.
#
#     You should have received a copy of the GNU Lesser General Public License
#     along with this software.  If not, see <http://www.gnu.org/licenses/>.
#

# Name or path of the user specific properties file. This file should contain the necessary parameters to connect to the
# developer's own unit test schema. It is recommended to override the name of this file in the project specific properties
# file, to include the name of the project. The system will try to find this file in the classpath, the user home folder
# (recommended) or the local filesystem.
# unitils.configuration.localFileName=unitils-squashtest-local.properties

# Properties for the PropertiesDataSourceFactory
database.driverClassName=${database.drivername}
database.url=${dbunit-database.url}
database.userName=${database.username}
database.password=${database.password}

# deactivates unitils JDBC transaction management which would override Hibernate's transaction manager
DatabaseModule.Transactional.value.default=rollback

# This property specifies the underlying DBMS implementation. Supported values are 'oracle', 'db2', 'mysql' and 'hsqldb'.
# The value of this property defines which vendor specific implementations of DbSupport and ConstraintsDisabler are chosen.
database.dialect=${database.dialect}

database.schemaNames=${database.schemaName}

database.storedIndentifierCase.h2=auto
database.identifierQuoteString.h2=auto
org.unitils.core.dbsupport.DbSupport.implClassName.h2=org.unitils.core.dbsupport.H2DbSupport

database.storedIndentifierCase.mysql=auto
database.identifierQuoteString.mysql=auto
org.unitils.core.dbsupport.DbSupport.implClassName.mysql=org.unitils.core.dbsupport.MySqlDbSupport

org.dbunit.dataset.datatype.IDataTypeFactory.implClassName=${database.typefactory}

# If set to true, the DBMaintainer will be used to update the unit test database schema. This is done once for each
# test run, when creating the DataSource that provides access to the unit test database.
#updateDataBaseSchema.enabled=true

# Comma separated list of directories and files in which the database update scripts are located. Directories in this
# list are recursively searched for files.
#dbMaintainer.script.locations=<Paths to your database update script files>

# DbUnit database XSD directory
#dataSetStructureGenerator.xsd.dirName=<Path to your database XSD directory>

# Set this property to true if the dbmaintain_scripts table should be created automatically if not found.
# If false, an exception is thrown when the table is not found, indicating how to create it manually. 
# This property is false by default to be sure that a database is cleared by accident. If an executed 
# scripts table is available, we assume it to be a database managed by dbmaintain.
#dbMaintainer.autoCreateExecutedScriptsTable=false
