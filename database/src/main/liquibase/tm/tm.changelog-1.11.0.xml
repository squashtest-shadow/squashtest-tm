<?xml version="1.0" encoding="UTF-8"?>
<!--

        This file is part of the Squashtest platform.
        Copyright (C) 2010 - 2014 Henix, henix.fr

        See the NOTICE file distributed with this work for additional
        information regarding copyright ownership.

        This is free software: you can redistribute it and/or modify
        it under the terms of the GNU Lesser General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.

        this software is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU Lesser General Public License for more details.

        You should have received a copy of the GNU Lesser General Public License
        along with this software.  If not, see <http://www.gnu.org/licenses/>.

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

  <changeSet id="tm-1.11.0" author="flaurens">
    <comment>Update TM database version number</comment>
    <update tableName="CORE_CONFIG">
      <column name="VALUE" value="1.11.0" />
      <where>STR_KEY = 'squashtest.tm.database.version'</where>
    </update>
  </changeSet>


  <changeSet id="tm-1.11.0.feature-3576-1" author="bsiri">

    <comment>
  		Prepares the table CUSTOM_FIELD for possible default_values of type CLOB.
  		Also accepts now a new value for the column FIELD_TYPE : RTF (for rich text fields) - no structural changes for that though.
  	</comment>

    <addColumn tableName="CUSTOM_FIELD">
      <column name="LONG_DEFAULT_VALUE" defaultValue="NULL" type="TEXT"
        remarks="this column is used by rich text cufs. It contains HTML data."></column>
    </addColumn>

  </changeSet>


  <changeSet id="tm-1.11.0.feature-3576-2" author="bsiri">

    <comment>prepares the table CUSTOM_FIELD_VALUE for values of type CLOB, and adds support for inheritance to that end.</comment>
    <addColumn tableName="CUSTOM_FIELD_VALUE">
      <column name="LONG_VALUE" defaultValue="NULL" type="TEXT"
        remarks="this column is used by rich text cufs. It contains HTML data."></column>

      <column name="FIELD_TYPE" type="VARCHAR(3)" defaultValue="CF" remarks="CF : simple, RTF : rich text field">
        <constraints nullable="false" />
      </column>
    </addColumn>

  </changeSet>

  <changeSet id="tm-1.11.0.feature-3576-3" author="bsiri">

    <comment>
  		Prepares the table DENORMALIZED_FIELD_VALUE for values of type CLOB, and adds support for inheritance to that end.
  		Also accepts now a new value for the column FIELD_TYPE : RTF (for rich text fields) - no structural changes for that though.
  	</comment>


    <addColumn tableName="DENORMALIZED_FIELD_VALUE">
      <column name="LONG_VALUE" defaultValue="NULL" type="TEXT"
        remarks="this column is used by rich text cufs. It contains HTML data."></column>

    </addColumn>

  </changeSet>


  <changeSet id="tm-1.11.0.feature-3556-4" author="kdrifi">
    <comment>Cleaning duplicates of column ROLE_USER in table core_group _authority</comment>

    <delete tableName="CORE_GROUP_AUTHORITY">
      <where>
        AUTHORITY='ROLE_USER'
      </where>
    </delete>

    <delete tableName="CORE_GROUP_AUTHORITY">
      <where>
        GROUP_ID = 1
        and AUTHORITY='ROLE_TM_USER'
      </where>
    </delete>
  </changeSet>


  <changeSet id="tm-1.11.0.feature-3577-1" author="mpagnon">
    <comment>Fix columns with CHAR(X) types to VARCHAR(X) type to avoid blank space filling by Postgresql</comment>
    <modifyDataType tableName="CUSTOM_FIELD" columnName="INPUT_TYPE" newDataType="VARCHAR(30)" />
    <modifyDataType tableName="CUSTOM_FIELD" columnName="FIELD_TYPE" newDataType="VARCHAR(3)" />
    <modifyDataType tableName="DENORMALIZED_FIELD_VALUE" columnName="FIELD_TYPE" newDataType="VARCHAR(3)" />
    <modifyDataType tableName="DENORMALIZED_FIELD_VALUE" columnName="INPUT_TYPE" newDataType="VARCHAR(30)" />

  </changeSet>
  <changeSet id="tm-1.11.0.feature-3577-2" author="jsimon" dbms="postgresql">
    <comment>create function to emulate group concat with separator</comment>
    <createProcedure>
CREATE OR REPLACE
FUNCTION concat_func(field1 TEXT, field2 TEXT)
RETURNS TEXT AS $$
BEGIN
RETURN COALESCE(field1||','||field2, field2, field1);
END;
$$ LANGUAGE plpgsql;

       DROP AGGREGATE IF EXISTS group_concat(text);
      CREATE AGGREGATE group_concat(text) (
          SFUNC     = group_concat_func
         ,STYPE     = text
      ); 

    </createProcedure>
  </changeSet>
  
  
  
  
  
  	<changeSet id="tm-1.9.0.feature-3138-2" author="jsimon">
  	<addNotNullConstraint tableName="CAMPAIGN_LIBRARY_CONTENT" columnName="CONTENT_ORDER" columnDataType="INTEGER"/>
  	<addNotNullConstraint tableName="CLN_RELATIONSHIP" columnName="CONTENT_ORDER" columnDataType="INTEGER"/>
  	</changeSet>
  	
  	<changeSet id="tm-1.9.0.feature-3138-4" author="jsimon">
  	<addNotNullConstraint tableName="RLN_RELATIONSHIP" columnName="CONTENT_ORDER" columnDataType="INTEGER"/>
  	<addNotNullConstraint tableName="REQUIREMENT_LIBRARY_CONTENT" columnName="CONTENT_ORDER" columnDataType="INTEGER"/>
  	</changeSet>
  	
  		<changeSet id="tm-1.9.0.feature-3138-6" author="jsimon">
  	<addNotNullConstraint tableName="TCLN_RELATIONSHIP" columnName="CONTENT_ORDER" columnDataType="INTEGER"/>
  	<addNotNullConstraint tableName="TEST_CASE_LIBRARY_CONTENT" columnName="CONTENT_ORDER" columnDataType="INTEGER"/>
  	</changeSet>
  
</databaseChangeLog>
