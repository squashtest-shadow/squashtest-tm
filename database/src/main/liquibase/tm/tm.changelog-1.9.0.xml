<?xml version="1.0" encoding="UTF-8"?>
<!--

        This file is part of the Squashtest platform.
        Copyright (C) 2010 - 2014 Henix, henix.fr

        See the NOTICE file distributed with this work for additional
        information regarding copyright ownership.

        This is free software: you can redistribute it and/or modify
        it under the terms of the GNU Lesser General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.

        this software is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU Lesser General Public License for more details.

        You should have received a copy of the GNU Lesser General Public License
        along with this software.  If not, see <http://www.gnu.org/licenses/>.

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

  <changeSet id="tm-1.9.0" author="flaurens">
    <comment>Update TM database version number</comment>
    <update tableName="CORE_CONFIG">
      <column name="VALUE" value="1.9.0" />
      <where>STR_KEY = 'squashtest.tm.database.version'</where>
    </update>
  </changeSet>

  <changeSet id="tm-1.9.0.feature-3138-1" author="flaurens">
    <comment>Adding columns to order descendants in node relationship tables</comment>
    <addColumn tableName="CLN_RELATIONSHIP">
      <column name="CONTENT_ORDER" type="INT">
        <constraints nullable="true" />
      </column>
    </addColumn>
    <addColumn tableName="RLN_RELATIONSHIP">
      <column name="CONTENT_ORDER" type="INT">
        <constraints nullable="true" />
      </column>
    </addColumn>
    <addColumn tableName="TCLN_RELATIONSHIP">
      <column name="CONTENT_ORDER" type="INT">
        <constraints nullable="true" />
      </column>
    </addColumn>
    <addColumn tableName="REQUIREMENT_LIBRARY_CONTENT">
      <column name="CONTENT_ORDER" type="INT">
        <constraints nullable="true" />
      </column>
    </addColumn>
    <addColumn tableName="TEST_CASE_LIBRARY_CONTENT">
      <column name="CONTENT_ORDER" type="INT">
        <constraints nullable="true" />
      </column>
    </addColumn>
    <addColumn tableName="CAMPAIGN_LIBRARY_CONTENT">
      <column name="CONTENT_ORDER" type="INT">
        <constraints nullable="true" />
      </column>
    </addColumn>
  </changeSet>

  <changeSet id="tm-1.9.0.feature-3138-2" author="flaurens">
    <preConditions onError="CONTINUE" onFail="CONTINUE" onSqlOutput="TEST">
      <dbms type="mysql" />
    </preConditions>
    <comment>Creating default order which is identical with the alphabetical order</comment>
    <sql>
      create table TEMP_CLN_CONTENT_ORDER(
        CONTENT_ORDER BIGINT NOT NULL, 
        ANCESTOR_ID BIGINT NOT NULL, 
        DESCENDANT_ID BIGINT NOT NULL, 
        DUMMY BIGINT NOT NULL
      );

      insert into TEMP_CLN_CONTENT_ORDER (CONTENT_ORDER, ANCESTOR_ID, DESCENDANT_ID, DUMMY)
      select 
        if(@prevtcs=ANCESTOR_ID, @rownum:=@rownum+1, @rownum:=0) as RANK,
        clnr.ANCESTOR_ID, 
        clnr.DESCENDANT_ID, 
        (@prevtcs:=ANCESTOR_ID)
      from CLN_RELATIONSHIP clnr
        join CAMPAIGN_LIBRARY_NODE cln on clnr.DESCENDANT_ID = cln.CLN_ID,
        (SELECT @rownum:=0) r, 
        (SELECT @prevtcs:=0) s
      order by clnr.ANCESTOR_ID, 
        cln.NAME;

      insert into TEMP_CLN_CONTENT_ORDER (CONTENT_ORDER, ANCESTOR_ID, DESCENDANT_ID, DUMMY)
      select 
        if(@prevtcs=LIBRARY_ID, @rownum:=@rownum+1, @rownum:=0) as RANK,
        clnr.LIBRARY_ID, clnr.CONTENT_ID, (@prevtcs:=LIBRARY_ID)
      from CAMPAIGN_LIBRARY_CONTENT clnr
        join CAMPAIGN_LIBRARY_NODE cln on clnr.CONTENT_ID = cln.CLN_ID,
        (SELECT @rownum:=0) r, 
        (SELECT @prevtcs:=0) s
      order by clnr.LIBRARY_ID, 
        cln.NAME;

      update CLN_RELATIONSHIP
      set CONTENT_ORDER = (
        select TEMP_CLN_CONTENT_ORDER.CONTENT_ORDER
        from TEMP_CLN_CONTENT_ORDER
        where TEMP_CLN_CONTENT_ORDER.ANCESTOR_ID = CLN_RELATIONSHIP.ANCESTOR_ID
          and TEMP_CLN_CONTENT_ORDER.DESCENDANT_ID = CLN_RELATIONSHIP.DESCENDANT_ID
      );

      update CAMPAIGN_LIBRARY_CONTENT
      set CONTENT_ORDER = (
        select TEMP_CLN_CONTENT_ORDER.CONTENT_ORDER
        from TEMP_CLN_CONTENT_ORDER
        where TEMP_CLN_CONTENT_ORDER.ANCESTOR_ID = CAMPAIGN_LIBRARY_CONTENT.LIBRARY_ID
          and TEMP_CLN_CONTENT_ORDER.DESCENDANT_ID = CAMPAIGN_LIBRARY_CONTENT.CONTENT_ID
      );

      drop table TEMP_CLN_CONTENT_ORDER;
    </sql>
  </changeSet>

  <changeSet id="tm-1.9.0.feature-3138-3" author="flaurens">
    <preConditions onError="CONTINUE" onFail="CONTINUE" onSqlOutput="TEST">
      <dbms type="h2" />
    </preConditions>
    <comment>Creating default order which is identical with the alphabetical order</comment>
    <sql><![CDATA[
    create table TEMP_CLN_CONTENT_ORDER(
      CONTENT_ORDER BIGINT NOT NULL, 
      ANCESTOR_ID BIGINT NOT NULL, 
      DESCENDANT_ID BIGINT NOT NULL, 
      DUMMY BIGINT NOT NULL
    );
    
    set @cprn=-1;
    set @prevcps=0;

    insert into TEMP_CLN_CONTENT_ORDER (CONTENT_ORDER, ANCESTOR_ID, DESCENDANT_ID, DUMMY)
    select 
      casewhen(@prevcps = ANCESTOR_ID, set(@cprn, @cprn+1),
      set(@cprn, 0)) as RANK,
      clnr.ANCESTOR_ID, 
      clnr.DESCENDANT_ID, 
      (@prevcps:=ANCESTOR_ID)
    from CLN_RELATIONSHIP clnr
      join CAMPAIGN_LIBRARY_NODE cln on clnr.DESCENDANT_ID = cln.CLN_ID, 
      (SELECT @cprn:=0) r, 
      (SELECT @prevcps:=0) s
    order by clnr.ANCESTOR_ID, 
      cln.NAME;    

    set @cprn=-1;
    set @prevcps=0;

    insert into TEMP_CLN_CONTENT_ORDER (CONTENT_ORDER, ANCESTOR_ID, DESCENDANT_ID, DUMMY)
    select 
      casewhen(@prevcps = LIBRARY_ID, set(@cprn, @cprn+1), set(@cprn, 0)) as RANK,
      clnr.LIBRARY_ID, clnr.CONTENT_ID, (@prevcps:=LIBRARY_ID)
    from CAMPAIGN_LIBRARY_CONTENT clnr
      join CAMPAIGN_LIBRARY_NODE cln on clnr.CONTENT_ID = cln.CLN_ID, 
      (SELECT @cprn:=0) r, 
      (SELECT @prevcps:=0) s
    order by clnr.LIBRARY_ID, 
      cln.NAME;  
        
    update CLN_RELATIONSHIP
    set CONTENT_ORDER = (select TEMP_CLN_CONTENT_ORDER.CONTENT_ORDER
                         from TEMP_CLN_CONTENT_ORDER
                         where TEMP_CLN_CONTENT_ORDER.ANCESTOR_ID = CLN_RELATIONSHIP.ANCESTOR_ID
                         and TEMP_CLN_CONTENT_ORDER.DESCENDANT_ID = CLN_RELATIONSHIP.DESCENDANT_ID);

    update CAMPAIGN_LIBRARY_CONTENT
    set CONTENT_ORDER = (
      select TEMP_CLN_CONTENT_ORDER.CONTENT_ORDER
      from TEMP_CLN_CONTENT_ORDER
      where TEMP_CLN_CONTENT_ORDER.ANCESTOR_ID = CAMPAIGN_LIBRARY_CONTENT.LIBRARY_ID
        and TEMP_CLN_CONTENT_ORDER.DESCENDANT_ID = CAMPAIGN_LIBRARY_CONTENT.CONTENT_ID);
                             
    drop table TEMP_CLN_CONTENT_ORDER;    
        ]]></sql>
  </changeSet>

  <changeSet id="tm-1.9.0.feature-3138-4" author="flaurens">
    <preConditions onError="CONTINUE" onFail="CONTINUE" onSqlOutput="TEST">
      <dbms type="mysql" />
    </preConditions>
    <comment>Creating default order which is identical with the alphabetical order</comment>
    <sql>
      create table TEMP_RLN_CONTENT_ORDER(CONTENT_ORDER BIGINT NOT NULL, ANCESTOR_ID BIGINT NOT NULL, DESCENDANT_ID BIGINT NOT
      NULL, DUMMY BIGINT NOT NULL);

      insert into TEMP_RLN_CONTENT_ORDER (CONTENT_ORDER, ANCESTOR_ID, DESCENDANT_ID, DUMMY)
      select if(@prevtcs=ANCESTOR_ID,
      @rownum:=@rownum+1,
      @rownum:=0) as RANK,
      rlnr.ANCESTOR_ID, rlnr.DESCENDANT_ID, (@prevtcs:=ANCESTOR_ID)
      from RLN_RELATIONSHIP rlnr
      join RESOURCE rln on rlnr.DESCENDANT_ID = rln.RES_ID,
      (SELECT @rownum:=0) r, (SELECT @prevtcs:=0) s
      order by rlnr.ANCESTOR_ID, rln.NAME;

      insert into TEMP_RLN_CONTENT_ORDER (CONTENT_ORDER, ANCESTOR_ID, DESCENDANT_ID, DUMMY)
      select if(@prevtcs=LIBRARY_ID,
      @rownum:=@rownum+1,
      @rownum:=0) as RANK,
      rlnr.LIBRARY_ID, rlnr.CONTENT_ID, (@prevtcs:=LIBRARY_ID)
      from REQUIREMENT_LIBRARY_CONTENT rlnr
      join RESOURCE rln on rlnr.CONTENT_ID = rln.RES_ID,
      (SELECT @rownum:=0) r, (SELECT @prevtcs:=0) s
      order by rlnr.LIBRARY_ID, rln.NAME;

      update RLN_RELATIONSHIP
      set CONTENT_ORDER = (select TEMP_RLN_CONTENT_ORDER.CONTENT_ORDER
      from TEMP_RLN_CONTENT_ORDER
      where TEMP_RLN_CONTENT_ORDER.ANCESTOR_ID = RLN_RELATIONSHIP.ANCESTOR_ID
      and TEMP_RLN_CONTENT_ORDER.DESCENDANT_ID = RLN_RELATIONSHIP.DESCENDANT_ID);

      update REQUIREMENT_LIBRARY_CONTENT
      set CONTENT_ORDER = (select TEMP_RLN_CONTENT_ORDER.CONTENT_ORDER
      from TEMP_RLN_CONTENT_ORDER
      where TEMP_RLN_CONTENT_ORDER.ANCESTOR_ID = REQUIREMENT_LIBRARY_CONTENT.LIBRARY_ID
      and TEMP_RLN_CONTENT_ORDER.DESCENDANT_ID = REQUIREMENT_LIBRARY_CONTENT.CONTENT_ID);

      drop table TEMP_RLN_CONTENT_ORDER;
    </sql>
  </changeSet>

  <changeSet id="tm-1.9.0.feature-3138-5" author="flaurens">
    <preConditions onError="CONTINUE" onFail="CONTINUE" onSqlOutput="TEST">
      <dbms type="h2" />
    </preConditions>
    <comment>Creating default order which is identical with the alphabetical order</comment>
    <sql><![CDATA[
      create table TEMP_RLN_CONTENT_ORDER (
        CONTENT_ORDER BIGINT NOT NULL, 
        ANCESTOR_ID BIGINT NOT NULL, 
        DESCENDANT_ID BIGINT NOT NULL, 
        DUMMY BIGINT NOT NULL
      );

      set @rqrn=-1;
      set @prevrqs=0;

      insert into TEMP_RLN_CONTENT_ORDER (CONTENT_ORDER, ANCESTOR_ID, DESCENDANT_ID, DUMMY)
      select 
        casewhen(@prevtcs = ANCESTOR_ID, set(@rqrn, @rqrn+1), set(@rqrn, 0)) as RANK,
        rlnr.ANCESTOR_ID, 
        rlnr.DESCENDANT_ID, 
        (@prevrqs:=ANCESTOR_ID)
      from RLN_RELATIONSHIP rlnr
        join RESOURCE rln on rlnr.DESCENDANT_ID = rln.RES_ID, 
        (SELECT @rqrn:=0) r, 
        (SELECT @prevrqs:=0) s
      order by rlnr.ANCESTOR_ID, 
        rln.NAME;

      set @rqrn=-1;
      set @prevrqs=0;
      
    insert into TEMP_RLN_CONTENT_ORDER (CONTENT_ORDER, ANCESTOR_ID, DESCENDANT_ID, DUMMY)
    select casewhen(@prevtcs = LIBRARY_ID, set(@rqrn, @rqrn+1),
      set(@rqrn, 0)) as RANK,
              rlnr.LIBRARY_ID, rlnr.CONTENT_ID, (@prevrqs:=LIBRARY_ID)
    from REQUIREMENT_LIBRARY_CONTENT rlnr
    join RESOURCE rln on rlnr.CONTENT_ID = rln.RES_ID, 
    (SELECT @rqrn:=0) r, (SELECT @prevrqs:=0) s
    order by rlnr.LIBRARY_ID, rln.NAME;    
        
    update RLN_RELATIONSHIP
    set CONTENT_ORDER = (select TEMP_RLN_CONTENT_ORDER.CONTENT_ORDER
                         from TEMP_RLN_CONTENT_ORDER
                         where TEMP_RLN_CONTENT_ORDER.ANCESTOR_ID = RLN_RELATIONSHIP.ANCESTOR_ID
                         and TEMP_RLN_CONTENT_ORDER.DESCENDANT_ID = RLN_RELATIONSHIP.DESCENDANT_ID);
    
    update REQUIREMENT_LIBRARY_CONTENT
    set CONTENT_ORDER = (select TEMP_RLN_CONTENT_ORDER.CONTENT_ORDER
                         from TEMP_RLN_CONTENT_ORDER
                         where TEMP_RLN_CONTENT_ORDER.ANCESTOR_ID = REQUIREMENT_LIBRARY_CONTENT.LIBRARY_ID
                         and TEMP_RLN_CONTENT_ORDER.DESCENDANT_ID = REQUIREMENT_LIBRARY_CONTENT.CONTENT_ID);
                         
    drop table TEMP_RLN_CONTENT_ORDER;    
        ]]></sql>
  </changeSet>

  <changeSet id="tm-1.9.0.feature-3138-6" author="flaurens">
    <preConditions onError="CONTINUE" onFail="CONTINUE" onSqlOutput="TEST">
      <dbms type="mysql" />
    </preConditions>
    <comment>Creating default order which is identical with the alphabetical order</comment>
    <sql>
      create table TEMP_TCLN_CONTENT_ORDER(CONTENT_ORDER BIGINT NOT NULL, ANCESTOR_ID BIGINT NOT NULL, DESCENDANT_ID BIGINT NOT
      NULL, DUMMY BIGINT NOT NULL);

      insert into TEMP_TCLN_CONTENT_ORDER (CONTENT_ORDER, ANCESTOR_ID, DESCENDANT_ID, DUMMY)
      select if(@prevtcs=ANCESTOR_ID,
      @rownum:=@rownum+1,
      @rownum:=0) as RANK,
      tclnr.ANCESTOR_ID, tclnr.DESCENDANT_ID, (@prevtcs:=ANCESTOR_ID)
      from TCLN_RELATIONSHIP tclnr
      join TEST_CASE_LIBRARY_NODE tcln on tclnr.DESCENDANT_ID = tcln.TCLN_ID,
      (SELECT @rownum:=0) r, (SELECT @prevtcs:=0) s
      order by tclnr.ANCESTOR_ID, tcln.NAME;

      insert into TEMP_TCLN_CONTENT_ORDER (CONTENT_ORDER, ANCESTOR_ID, DESCENDANT_ID, DUMMY)
      select if(@prevtcs=LIBRARY_ID,
      @rownum:=@rownum+1,
      @rownum:=0) as RANK,
      tclnr.LIBRARY_ID, tclnr.CONTENT_ID, (@prevtcs:=LIBRARY_ID)
      from TEST_CASE_LIBRARY_CONTENT tclnr
      join TEST_CASE_LIBRARY_NODE tcln on tclnr.CONTENT_ID = tcln.TCLN_ID,
      (SELECT @rownum:=0) r, (SELECT @prevtcs:=0) s
      order by tclnr.LIBRARY_ID, tcln.NAME;

      update TCLN_RELATIONSHIP
      set CONTENT_ORDER = (select TEMP_TCLN_CONTENT_ORDER.CONTENT_ORDER
      from TEMP_TCLN_CONTENT_ORDER
      where TEMP_TCLN_CONTENT_ORDER.ANCESTOR_ID = TCLN_RELATIONSHIP.ANCESTOR_ID
      and TEMP_TCLN_CONTENT_ORDER.DESCENDANT_ID = TCLN_RELATIONSHIP.DESCENDANT_ID);


      update TEST_CASE_LIBRARY_CONTENT
      set CONTENT_ORDER = (select TEMP_TCLN_CONTENT_ORDER.CONTENT_ORDER
      from TEMP_TCLN_CONTENT_ORDER
      where TEMP_TCLN_CONTENT_ORDER.ANCESTOR_ID = TEST_CASE_LIBRARY_CONTENT.LIBRARY_ID
      and TEMP_TCLN_CONTENT_ORDER.DESCENDANT_ID = TEST_CASE_LIBRARY_CONTENT.CONTENT_ID);

      drop table TEMP_TCLN_CONTENT_ORDER;
    </sql>
  </changeSet>

  <changeSet id="tm-1.9.0.feature-3138-7" author="flaurens">
    <preConditions onError="CONTINUE" onFail="CONTINUE" onSqlOutput="TEST">
      <dbms type="h2" />
    </preConditions>
    <comment>Creating default order which is identical with the alphabetical order</comment>
    <sql><![CDATA[
      create table TEMP_TCLN_CONTENT_ORDER(
        CONTENT_ORDER BIGINT NOT NULL, 
        ANCESTOR_ID BIGINT NOT NULL, 
        DESCENDANT_ID BIGINT NOT NULL, 
        DUMMY BIGINT NOT NULL
      );
    
      set @tcrn=-1;
      set @prevtcs=0;
      
      insert into TEMP_TCLN_CONTENT_ORDER (CONTENT_ORDER, ANCESTOR_ID, DESCENDANT_ID, DUMMY)
      select  
        casewhen(@prevtcs = ANCESTOR_ID, set(@tcrn, @tcrn+1), set(@tcrn, 0)) as RANK,
        tclnr.ANCESTOR_ID, 
        tclnr.DESCENDANT_ID, 
        (@prevtcs:=ANCESTOR_ID)
      from TCLN_RELATIONSHIP tclnr
        join TEST_CASE_LIBRARY_NODE tcln on tclnr.DESCENDANT_ID = tcln.TCLN_ID, 
        (SELECT @tcrn:=0) r, 
        (SELECT @prevtcs:=0) s
      order by tclnr.ANCESTOR_ID, 
        tcln.NAME;    

      set @tcrn=-1;
      set @prevtcs=0;

      insert into TEMP_TCLN_CONTENT_ORDER (CONTENT_ORDER, ANCESTOR_ID, DESCENDANT_ID, DUMMY)
      select
        casewhen(@prevtcs = LIBRARY_ID, set(@tcrn, @tcrn+1), set(@tcrn, 0)) as RANK,
        tclnr.LIBRARY_ID, 
        tclnr.CONTENT_ID, 
        (@prevtcs:=LIBRARY_ID)
      from TEST_CASE_LIBRARY_CONTENT tclnr
        join TEST_CASE_LIBRARY_NODE tcln on tclnr.CONTENT_ID = tcln.TCLN_ID, 
        (SELECT @tcrn:=0) r, 
        (SELECT @prevtcs:=0) s
      order by tclnr.LIBRARY_ID, tcln.NAME;
        
      update TCLN_RELATIONSHIP
      set CONTENT_ORDER = (
        select TEMP_TCLN_CONTENT_ORDER.CONTENT_ORDER
        from TEMP_TCLN_CONTENT_ORDER
        where TEMP_TCLN_CONTENT_ORDER.ANCESTOR_ID = TCLN_RELATIONSHIP.ANCESTOR_ID
          and TEMP_TCLN_CONTENT_ORDER.DESCENDANT_ID = TCLN_RELATIONSHIP.DESCENDANT_ID
      );
    
    update TEST_CASE_LIBRARY_CONTENT
    set CONTENT_ORDER = (
      select TEMP_TCLN_CONTENT_ORDER.CONTENT_ORDER
      from TEMP_TCLN_CONTENT_ORDER
      where TEMP_TCLN_CONTENT_ORDER.ANCESTOR_ID = TEST_CASE_LIBRARY_CONTENT.LIBRARY_ID
        and TEMP_TCLN_CONTENT_ORDER.DESCENDANT_ID = TEST_CASE_LIBRARY_CONTENT.CONTENT_ID);
  
      drop table TEMP_TCLN_CONTENT_ORDER;    
    ]]>
    </sql>
  </changeSet>
      
  <changeSet id="tm-1.9.0.feature-3138-8" author="flaurens">
    <dropNotNullConstraint tableName="REQUIREMENT_VERSION_COVERAGE" columnName="VERIFIED_REQ_VERSION_ID" columnDataType="BIGINT(20)"/>
  </changeSet>

  <changeSet id="tm-1.9.0.feature-3211-1" author="flaurens">
    <createTable tableName="DISABLED_EXECUTION_STATUS">
      <column name="CL_ID" type="BIGINT">
        <constraints nullable="false" references="CAMPAIGN_LIBRARY(CL_ID)" foreignKeyName="FK_DISABLED_EXEC_STATUS_CL_ID" />
      </column>
      <column name="EXECUTION_STATUS" type="java.sql.Types.VARCHAR(255)">
        <constraints nullable="false"></constraints>
      </column>
    </createTable>
  </changeSet>
  
   <changeSet id="tm-1.9.0.feature-3211-2" author="flaurens">
    <comment>Inserting default disabled execution statuses for existing libraries</comment>
    <sql><![CDATA[
   	insert into DISABLED_EXECUTION_STATUS (CL_ID, EXECUTION_STATUS)
	select cl_id, 'ERROR' from CAMPAIGN_LIBRARY;
		
	insert into DISABLED_EXECUTION_STATUS (CL_ID, EXECUTION_STATUS)
	select cl_id, 'WARNING' from CAMPAIGN_LIBRARY;

	insert into DISABLED_EXECUTION_STATUS (CL_ID, EXECUTION_STATUS)
	select cl_id, 'NOT_RUN' from CAMPAIGN_LIBRARY;

	insert into DISABLED_EXECUTION_STATUS (CL_ID, EXECUTION_STATUS)
	select cl_id, 'SETTLED' from CAMPAIGN_LIBRARY;
	]]>
    </sql>
   </changeSet>
   
    <changeSet id="tm-1.9.0-issue-3236-01" author="flaurens">
      <sql><![CDATA[
		update DENORMALIZED_FIELD_VALUE dfv
		set dfv.FIELD_TYPE = 'CF'
		where dfv.FIELD_TYPE = ''
	]]>
    </sql>
  </changeSet>
  
</databaseChangeLog>
